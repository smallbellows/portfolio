---
import Icon from './Icon.astro';
import type { iconPaths } from './IconPaths';

/** Main menu items */
const textLinks: { label: string; href: string }[] = [
    { label: 'Home', href: '/' },
    { label: 'Work', href: '/work/' },
    { label: 'About', href: '/about/' },
];

/** Icon links to social media â€” edit these with links to your profiles! */
const iconLinks: {
    label: string;
    href: string;
    icon: keyof typeof iconPaths;
}[] = [
    { label: 'GitHub', href: 'https://github.com/me', icon: 'github-logo' },
    {
        label: 'LinkedIn',
        href: 'https://linkedin.com/me',
        icon: 'linkedin-logo',
    },
];

/** Test if a link is pointing to the current page. */
const isCurrentPage = (href: string) => {
    let pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, '');
    if (pathname.at(0) !== '/') pathname = '/' + pathname;
    if (pathname.at(-1) !== '/') pathname += '/';
    return pathname === href || (href !== '/' && pathname.startsWith(href));
};
---

<nav
    class="navbar is-fixed-top section"
    role="navigation"
    aria-label="main navigation"
>
    <div class="navbar-brand">
        <a href="/" class="navbar-item title">
            <Icon icon="terminal-window" size="1.6em" />
            Sara Given
        </a>
        <a
            class="navbar-burger"
            role="button"
            aria-label="menu"
            aria-expanded="false"
            data-target="navMenu"
        >
            <span aria-hidden="true"></span>
            <span aria-hidden="true"></span>
            <span aria-hidden="true"></span>
            <span aria-hidden="true"></span>
        </a>
    </div>
    <div class="navbar-menu" id="navMenu">
        <div class="navbar-start is-align-items-center is-gap-2">
            {
                textLinks.map((textLink) => (
                    <a
                        class={`tag is-medium ${isCurrentPage(textLink.href) ? 'is-primary is-light' : ''}`}
                        href={textLink.href}
                    >
                        {textLink.label}
                    </a>
                ))
            }
        </div>
        <div class="navbar-end">
            {
                iconLinks.map((iconLink) => (
                    <a
                        class="navbar-item"
                        href={iconLink.href}
                        target="_blank"
                        rel="noopener noreferrer"
                    >
                        <Icon icon={iconLink.icon} size="1.6em" />
                        <span class="is-sr-only">{iconLink.label}</span>
                    </a>
                ))
            }
        </div>
    </div>
</nav>

<style>
    .navbar-menu.is-active > div {
        display: flex;
        justify-content: center;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        // Get all "navbar-burger" elements
        const $navbarBurgers = Array.prototype.slice.call(
            document.querySelectorAll('.navbar-burger'),
            0
        );

        // Add a click event on each of them
        $navbarBurgers.forEach((el) => {
            el.addEventListener('click', () => {
                // Get the target from the "data-target" attribute
                const target = el.dataset.target;
                const $target = document.getElementById(target);

                // Toggle the "is-active" class on both the "navbar-burger" and the "navbar-menu"
                el.classList.toggle('is-active');
                $target?.classList.toggle('is-active');
            });
        });
    });
</script>
